/api/v1/rule_groups:
  get:
    summary: List all rule groups.
    description: List all rule groups.
    operationId: listRuleGroup
    tags:
      - rule_groups
    parameters:
    - in: query
      name: page
      description: Page number. The default pagination is 50
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of rule groups.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleGroupArray'
  post:
    summary: Store a new rule group.
    description: Creates a new rule group. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeRuleGroup
    tags:
      - rule_groups
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleGroup'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RuleGroup'
      description: "JSON array or key=value pairs with the necessary rule group information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New rule group stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleGroupSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/rule_groups/{id}:
  get:
    summary: Get a single rule group.
    description: Get a single rule group. This does not include the rules. For that, see below.
    operationId: getRuleGroup
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    tags:
      - rule_groups
    responses:
      '200':
        description: 'The requested rule group'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleGroupSingle'
      '404':
        description: Rule group not found.
  put:
    operationId: updateRuleGroup
    tags:
      - rule_groups
    description: Update existing rule group.
    summary: Update existing rule group.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleGroup'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RuleGroup'
      description: JSON array with updated rule group information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated rule group stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleGroupSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteRuleGroup
    description: Delete a rule group.
    summary: Delete a rule group.
    tags:
      - rule_groups
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    responses:
      '204':
        description: Rule group deleted.
      '404':
        description: No such rule group
/api/v1/rule_groups/{id}/test:
  get:
    summary: Test which transactions would be hit by the rule group. No changes will be made.
    description: Test which transactions would be hit by the rule group. No changes will be made. Limit the result if you want to.
    operationId: testRuleGroup
    tags:
      - rule_groups
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    - in: query
      name: page
      description: Page number. The default pagination is 50 items.
      required: false
      schema:
        type: integer
        example: 1
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD, to limit the transactions the test will be applied to. Both the start date and the end date must be present.
      required: false
      schema:
        type: string
        format: date
        example: 2018-09-17
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD, to limit the transactions the test will be applied to. Both the start date and the end date must be present.
      required: false
      schema:
        type: string
        format: date
        example: 2018-09-17
    - in: query
      name: search_limit
      description: |
        Maximum number of transactions Firefly III will try. Don't set this too high, or it will take Firefly III very long to run the test. I suggest a max of 200.
      required: false
      schema:
        type: integer
    - in: query
      name: triggered_limit
      description: |
        Maximum number of transactions the rule group can actually trigger on, before Firefly III stops. I would suggest setting this to 10 or 15. Don't go above the user's page size, because browsing to page 2 or 3 of a test result would fire the test again, making any navigation efforts very slow.
      required: false
      schema:
        type: integer
    - in: query
      name: accounts
      explode: false
      description: |
        Limit the testing of the rule group to these asset accounts. Only asset accounts will be accepted. Other types will be silently dropped.
      required: false
      example: "1,2,3"
      schema:
        type: string
        format: string
    responses:
      '200':
        description: A list of transactions that would be changed by any of the rules of the rule group. No changes will be made.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionArray'
/api/v1/rule_groups/{id}/rules:
  get:
    summary: List rules in this rule group.
    description: List rules in this rule group.
    operationId: listRuleByGroup
    tags:
      - rule_groups
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of rules.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleArray'
/api/v1/rule_groups/{id}/trigger:
  post:
    summary: Fire the rule group on your transactions.
    description: Fire the rule group on your transactions. Changes will be made by the rules in the rule group! Limit the result if you want to.
    operationId: fireRuleGroup
    tags:
      - rule_groups
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. Both the start date and the end date must be present.
      required: false
      schema:
        type: string
        example: 2018-09-17
        format: date
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. Both the start date and the end date must be present.
      required: false
      schema:
        type: string
        example: 2018-09-17
        format: date
    - in: query
      name: accounts
      explode: false
      description: |
        Limit the testing of the rule group to these asset accounts. Only asset accounts will be accepted. Other types will be silently dropped.
      required: false
      example: "1,2,3"
      schema:
        type: string
        format: string
    responses:
      '204':
        description: "The rules in the group are executed. Due to the setup of this function (asynchronous job execution) the result cannot be displayed."
