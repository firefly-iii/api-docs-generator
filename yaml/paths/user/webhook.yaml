/api/v1/webhooks:
  get:
    summary: List all webhooks.
    description: List all the user's webhooks.
    operationId: listWebhook
    tags:
      - webhooks
    parameters:
    - in: query
      name: page
      description: The page number, if necessary. The default pagination is 50, so 50 webhooks per page.
      required: false
      schema:
        type: integer
        example: 1
    responses:
      200:
        description: A list of webhooks.
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WebhookArray'
  post:
    summary: Store a new webhook
    description: |
        Creates a new webhook. The data required can be submitted as a JSON body or as a list of parameters. The webhook will be given a random secret.
    operationId: storeUser
    tags:
      - webhooks
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookStore'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebhookStore'
      description: "JSON array or key=value pairs with the necessary webhook information. See the model for the exact specifications."
      required: true
    responses:
      200:
        description: 'New webhook stored, result in response.'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WebhookSingle'
      422:
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/webhooks/{id}:
  get:
    summary: Get a single webhook.
    description: Gets all info of a single webhook.
    operationId: getWebhook
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The webhook ID.
    tags:
      - webhooks
    responses:
      200:
        description: 'The requested webhook.'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WebhookSingle'
      404:
        description: Webhook not found.
  put:
    operationId: updateWebhook
    tags:
      - webhooks
    summary: Update existing webhook.
    description: Update an existing webhook's information. If you wish to reset the secret, submit any value as the "secret". Firefly III will take this as a hint and reset the secret of the webhook.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The webhook ID.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/WebhookUpdate'
      description: JSON array with updated webhook information. See the model for the exact specifications.
      required: true
    responses:
      200:
        description: 'Updated webhook stored, result in response'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WebhookSingle'
      422:
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteWebhook
    description: Delete a webhook.
    summary: Delete a webhook.
    tags:
      - webhooks
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The webhook ID.
    responses:
      204:
        description: Webhook deleted.
      404:
        description: No such webhook.
      '500':
        description: Error when deleting.