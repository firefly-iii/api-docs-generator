/api/v1/rules:
  get:
    summary: List all rules.
    description: List all rules.
    operationId: listRule
    tags:
      - rules
    parameters:
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of rules
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleArray'
  post:
    summary: Store a new rule
    description: Creates a new rule. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeRule
    tags:
      - rules
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rule'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Rule'
      description: "JSON array or key=value pairs with the necessary rule information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New rule stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/rules/{id}:
  get:
    summary: Get a single rule.
    description: Get a single rule.
    operationId: getRule
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    tags:
      - rules
    responses:
      '200':
        description: 'The requested rule'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleSingle'
      '404':
        description: Rule not found
  put:
    operationId: updateRule
    tags:
      - rules
    description: Update existing rule.
    summary: Update existing rule.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rule'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Rule'
      description: JSON array with updated rule information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated rule stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteRule
    description: Delete an rule.
    summary: Delete an rule.
    tags:
      - rules
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule.
    responses:
      '204':
        description: Rule deleted.
      '404':
        description: No such rule
/api/v1/rules/{id}/test:
  get:
    summary: Test which transactions would be hit by the rule. No changes will be made.
    description: Test which transactions would be hit by the rule. No changes will be made. Limit the result if you want to.
    operationId: testRule
    tags:
      - rules
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule.
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD, to limit the transactions the test will be applied to. Both the start date and the end date must be present.
      required: false
      schema:
        type: string
        format: date
        example: 2018-09-17
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD, to limit the transactions the test will be applied to. Both the start date and the end date must be present.
      required: false
      schema:
        type: string
        format: date
        example: 2018-09-17
    - in: query
      name: accounts
      explode: false
      description: |
        Limit the testing of the rule to these asset accounts. Only asset accounts will be accepted. Other types will be silently dropped.
      required: false
      example: "1,2,3"
      schema:
        type: string
        format: string
    responses:
      '200':
        description: A list of transactions that would be changed by the rule. No changes will be made.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionArray'
/api/v1/rules/{id}/trigger:
  post:
    summary: Fire the rule on your transactions.
    description: Fire the rule group on your transactions. Changes will be made by the rules in the group! Limit the result if you want to.
    operationId: fireRule
    tags:
      - rules
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule.
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. Both the start date and the end date must be present.
      required: false
      schema:
        type: string
        example: 2018-09-17
        format: date
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. Both the start date and the end date must be present.
      required: false
      schema:
        type: string
        example: 2018-09-17
        format: date
    - in: query
      name: accounts
      explode: false
      description: |
        Limit the testing of the rule to these asset accounts. Only asset accounts will be accepted. Other types will be silently dropped.
      required: false
      example: "1,2,3"
      schema:
        type: string
        format: string
    responses:
      '204':
        description: "The rules in the group are executed. Due to the setup of this function (asynchronous job execution) the result cannot be displayed."
