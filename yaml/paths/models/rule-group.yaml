/api/v1/rule_groups:
  get:
    summary: List all rule groups.
    description: List all rule groups.
    operationId: listRuleGroup
    tags:
      - rule_groups
    parameters:
    - in: query
      name: page
      description: Page number. The default pagination is 50
      required: false
      schema:
        type: integer
        example: 1
    responses:
      200:
        description: A list of rule groups.
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RuleGroupArray'
  post:
    summary: Store a new rule group.
    description: Creates a new rule group. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeRuleGroup
    tags:
      - rule_groups
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleGroupStore'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RuleGroupStore'
      description: "JSON array or key=value pairs with the necessary rule group information. See the model for the exact specifications."
      required: true
    responses:
      200:
        description: 'New rule group stored, result in response.'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RuleGroupSingle'
      422:
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/rule_groups/{id}:
  get:
    summary: Get a single rule group.
    description: Get a single rule group. This does not include the rules. For that, see below.
    operationId: getRuleGroup
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    tags:
      - rule_groups
    responses:
      200:
        description: 'The requested rule group'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RuleGroupSingle'
      404:
        description: Rule group not found.
  put:
    operationId: updateRuleGroup
    tags:
      - rule_groups
    description: Update existing rule group.
    summary: Update existing rule group.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleGroupUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RuleGroupUpdate'
      description: JSON array with updated rule group information. See the model for the exact specifications.
      required: true
    responses:
      200:
        description: 'Updated rule group stored, result in response'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RuleGroupSingle'
      422:
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteRuleGroup
    description: Delete a rule group.
    summary: Delete a rule group.
    tags:
      - rule_groups
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule group.
    responses:
      204:
        description: Rule group deleted.
      404:
        description: No such rule group

