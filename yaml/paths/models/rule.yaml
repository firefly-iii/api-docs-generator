/api/v1/rules:
  get:
    summary: List all rules.
    description: List all rules.
    operationId: listRule
    tags:
      - rules
    parameters:
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    responses:
      200:
        description: A list of rules
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RuleArray'
  post:
    summary: Store a new rule
    description: Creates a new rule. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeRule
    tags:
      - rules
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rule'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Rule'
      description: "JSON array or key=value pairs with the necessary rule information. See the model for the exact specifications."
      required: true
    responses:
      200:
        description: 'New rule stored, result in response.'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RuleSingle'
      422:
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/rules/{id}:
  get:
    summary: Get a single rule.
    description: Get a single rule.
    operationId: getRule
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    tags:
      - rules
    responses:
      200:
        description: 'The requested rule'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RuleSingle'
      404:
        description: Rule not found
  put:
    operationId: updateRule
    tags:
      - rules
    description: Update existing rule.
    summary: Update existing rule.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rule'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Rule'
      description: JSON array with updated rule information. See the model for the exact specifications.
      required: true
    responses:
      200:
        description: 'Updated rule stored, result in response'
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RuleSingle'
      422:
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteRule
    description: Delete an rule.
    summary: Delete an rule.
    tags:
      - rules
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the rule.
    responses:
      204:
        description: Rule deleted.
      404:
        description: No such rule
