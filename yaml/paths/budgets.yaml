/api/v1/budgets:
  get:
    summary: List all budgets.
    description: List all the budgets the user has made. If the start date and end date are submitted as well, the "spent" array will be updated accordingly.
    operationId: listBudget
    tags:
      - budgets
    parameters:
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD, to get info on how much the user has spent. You must submit both start and end.
      required: false
      schema:
        type: string
        format: date
        example: 2018-09-17
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD, to get info on how much the user has spent. You must submit both start and end.
      required: false
      schema:
        type: string
        format: date
        example: 2018-12-31
    responses:
      '200':
        description: A list of budgets.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetArray'
  post:
    summary: Store a new budget
    description: Creates a new budget. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeBudget
    tags:
      - budgets
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Budget'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Budget'
      description: "JSON array or key=value pairs with the necessary budget information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New budget stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/budgets/{id}:
  get:
    summary: Get a single budget.
    description: Get a single budget. If the start date and end date are submitted as well, the "spent" array will be updated accordingly.
    operationId: getBudget
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the requested budget.
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD, to get info on how much the user has spent.
      required: false
      schema:
        type: string
        format: date
        example: 2018-09-17
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD, to get info on how much the user has spent.
      required: false
      schema:
        type: string
        format: date
        example: 2018-12-31
    tags:
      - budgets
    responses:
      '200':
        description: 'The requested budget'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetSingle'
      '404':
        description: Budget not found.
  put:
    operationId: updateBudget
    tags:
      - budgets
    description: Update existing budget. This endpoint cannot be used to set budget amount limits.
    summary: Update existing budget.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
        example: 1
      description: The ID of the budget.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Budget'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Budget'
      description: JSON array with updated budget information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated budget stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteBudget
    description: Delete a budget. Transactions will not be deleted.
    summary: Delete a budget.
    tags:
      - budgets
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
        example: 1
      description: The ID of the budget.
    responses:
      '204':
        description: Budget deleted.
      '404':
        description: No such budget

/api/v1/budgets/{id}/transactions:
  get:
    summary: All transactions to a budget.
    description: Get all transactions linked to a budget, possibly limited by start and end
    operationId: listTransactionByBudget
    tags:
      - budgets
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the budget.
    - in: query
      name: limit
      description: Limits the number of results on one page.
      required: false
      schema:
        type: integer
        example: 5
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD.
      required: false
      schema:
        type: string
        format: date
        example: 2018-09-17
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD.
      required: false
      schema:
        type: string
        format: date
        example: 2018-12-31
    - in: query
      name: type
      description: Optional filter on the transaction type(s) returned
      required: false
      schema:
        $ref: '#/components/schemas/TransactionTypeFilter'
    responses:
      '200':
        description: A list of transactions.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionArray'
/api/v1/budgets/{id}/limits:
  get:
    operationId: listBudgetLimitByBudget
    description: |
        Get all budget limits for this budget and the money spent, and money left. You can limit the list by submitting a date range as well. The "spent" array for each budget limit is NOT influenced by the start and end date of your query, but by the start and end date of the budget limit itself.
    summary: Get all limits
    tags:
      - budgets
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
        example: 1
      description: The ID of the requested budget.
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD.
      required: false
      schema:
        type: string
        format: date
        example: 2018-09-17
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD.
      required: false
      schema:
        type: string
        format: date
        example: 2018-12-31
    responses:
      '200':
        description: A list of budget limits applicable to this budget.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetLimitArray'
  post:
    operationId: storeBudgetLimit
    description: Store a new budget limit.
    summary: Store new budget limit.
    tags:
      - budgets
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
        example: 1
      description: The ID of the budget.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BudgetLimit'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BudgetLimit'
      description: "JSON array or key=value pairs with the necessary budget information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New budget limit stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetLimitSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/budgets/limits/{id}:
  get:
    summary: Get single budget limit.
    operationId: getBudgetLimit
    tags:
      - budgets
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
        example: 1
      description: The ID of the requested budget limit.
    responses:
      '200':
        description: 'The requested budget limit'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetLimitSingle'
      '404':
        description: Budget limit not found.
  put:
    operationId: updateBudgetLimit
    tags:
      - budgets
    description: Update existing budget limit.
    summary: Update existing budget limit.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
        example: 1
      description: The ID of the requested budget limit. The budget limit MUST be associated to the budget ID.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BudgetLimit'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BudgetLimit'
      description: JSON array with updated budget limit information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated budget limit stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetLimitSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteBudgetLimit
    description: Delete a budget limit.
    summary: Delete a budget limit.
    tags:
      - budgets
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
        example: 1
      description: The ID of the requested budget limit.
    responses:
      '204':
        description: Budget limit deleted.
      '404':
        description: No such budget limit
/api/v1/budgets/limits/{id}/transactions:
  get:
    summary: List all transactions by a budget limit ID.
    description: List all the transactions within one budget limit. The start and end date are dictated by the budget limit.
    operationId: listTransactionByBudgetLimit
    tags:
      - budgets
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
        example: 1
      description: The ID of the requested budget limit.
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    - in: query
      name: type
      description: Optional filter on the transaction type(s) returned
      required: false
      schema:
        $ref: '#/components/schemas/TransactionTypeFilter'
    responses:
      '200':
        description: A list of transactions.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionArray'
/api/v1/budgets/{id}/attachments:
  get:
    summary: Lists all attachments.
    description: Lists all attachments.
    operationId: listAttachmentByBudget
    tags:
      - budgets
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the budget.
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of attachments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentArray'
      '404':
        description: No such budget.
